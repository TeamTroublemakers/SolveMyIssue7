@page "/ViewIssues"
@using SolveMyIssue7.Common.Interfaces
@using SolveMyIssue7.DataAccess.Models
@using SolveMyIssue7.DataAccess.Services
@using SolveMyIssue7.DataAccess.Services.Interfaces
@inject IIssueRepository NewIssueRepository
@inject NavigationManager NavManager

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">SMI</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item active">
                    <a class="nav-link" href="">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="issue">Issue</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="solution">Solution</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="ViewIssues">View Issues</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

<div class="container mt-3">
    <h2 class="display-4 glassmorphism">Issues</h2>
    <div class="row">
        @foreach (var issue in issues)
        {
            <div class="col-md-4 mb-3">
                <div class="card glassmorphism">
                    <div class="card-body ">
                        <h5 class="card-title">@issue.Title</h5>
                        <h6 class="card-subtitle mb-2 text-muted">@issue.Category</h6>
                        <p class="card-text">@issue.Description</p>
                        <a href="issueDetails/@issue.Id" class="card-link">More Details</a>
                    </div>
                    <div class="card-footer text-muted">
                        @issue.Created.ToString("yyyy-MM-dd")
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private List<Issue> issues = new List<Issue>();

    protected override async Task OnInitializedAsync()
    {
        var issuesEnumerable = await NewIssueRepository.GetAllAsync();
        issues = issuesEnumerable.ToList();
    }

}
