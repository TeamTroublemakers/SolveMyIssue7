@page "/ViewIssues"
@using SolveMyIssue7.Common.Interfaces
@using SolveMyIssue7.DataAccess.Models
@using SolveMyIssue7.DataAccess.Services
@using SolveMyIssue7.DataAccess.Services.Interfaces
@inject IIssueRepository NewIssueRepository
@inject NavigationManager NavManager



<div style="margin-top:10vh;" class="container">
    <h3 style="opacity:0.8">Issues</h3>
    <div class="row">
        @foreach (var issue in issues)
        {
            <div class="col-md-4 mb-3 card-style">
                <div class="card glassmorphism card-hover">
                    <div class="card-body ">
                        <div style="display:flex; flex-direction:row; justify-content:space-between;">
                            <div>
                                <h5 class="card-title">@issue.Title</h5>
                            </div>
                            <div style="opacity:0.6"> 
                                @issue.Created.ToString("yyyy-MM-dd")
                            </div>

                        </div>
                        <h6 class="card-subtitle mb-2" style="opacity:0.6">@issue.Category</h6>
                        <p class="card-text" style="opacity:0.86">@issue.Description</p>

                        <div style="display:flex; flex-direction:row; margin-top:2rem">
                            <a href="issueDetails/@issue.Id" class="card-link" style="color:var(--primary); text-decoration:none;">More Details</a>
                        </div>
                    </div>
                    @* <div class="card-footer text-muted">
                    </div> *@
                </div>
            </div>
        }
    </div>
</div>

@code {
    private List<Issue> issues = new List<Issue>();

    protected override async Task OnInitializedAsync()
    {
        var issuesEnumerable = await NewIssueRepository.GetAllAsync();
        issues = issuesEnumerable.ToList();
    }

}
