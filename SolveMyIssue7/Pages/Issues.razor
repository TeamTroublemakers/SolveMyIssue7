@page "/issue"
@using SolveMyIssue7.Common.Interfaces
@using SolveMyIssue7.DataAccess.Models
@using SolveMyIssue7.DataAccess.Services
@using SolveMyIssue7.DataAccess.Services.Interfaces
@inject IIssueRepository IssueRepository
@inject NavigationManager NavManager

<nav class="navbar navbar-expand-lg navbar-light bg-light">
	<div class="container-fluid">
		<a class="navbar-brand" href="#">SMI</a>
		<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
		<div class="collapse navbar-collapse" id="navbarNav">
			<ul class="navbar-nav">
				<li class="nav-item active">
					<a class="nav-link" href="">Home</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" href="issue">Issue</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" href="Solution">Solution</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" href="ViewIssues">View Issues</a>
				</li>
			</ul>
		</div>
	</div>
</nav>

<div class="centered-container">
<h2 class="mt-3 display-4">Submit an Issue</h2>
</div>

<EditForm FormName="Issues" Model="newIssue" OnSubmit="SubmitNewIssue">
	
	<div class="form-group">
		<label>Title</label>
		<InputText class="form-control" @bind-Value="newIssue.Title"></InputText>
	</div>
	<div class="form-group">
		<label>Description</label>
		<InputTextArea class="form-control" @bind-Value="newIssue.Description"></InputTextArea>
	</div>
	<div class="form-group">
		<label>Category</label>
		<InputText class="form-control" @bind-Value="newIssue.Category"></InputText>
	</div>
	<div class="form-group">
		<label>Date</label>
		<InputDate class="form-control" @bind-Value="newIssue.Created"></InputDate>
	</div>
	<div class="form-group centered-content">
		<button class="btn btn-primary mt-3 mb-3" type="submit">Submit</button>	
	</div>
</EditForm>



@code {

	private Issue newIssue = new Issue();

	private async Task SubmitNewIssue()
	{
		await IssueRepository.AddAsync(newIssue);
		newIssue = new Issue(); 
	}

}

