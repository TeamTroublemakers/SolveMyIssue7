@page "/issue"
@using SolveMyIssue7.Common.Interfaces
@using SolveMyIssue7.DataAccess.Models
@using SolveMyIssue7.DataAccess.Services
@using SolveMyIssue7.DataAccess.Services.Interfaces
@inject IIssueRepository IssueRepository
@inject NavigationManager NavManager


<div class="centered-container glassmorphism">
<h2 class="mt-3 display-4">Submit an Issue</h2>
</div>

<div class="glassmorphism">

<EditForm FormName="Issues" Model="newIssue" OnSubmit="SubmitNewIssue">
	
	<div class="form-group">
		<label>Title</label>
		<InputText class="form-control" @bind-Value="newIssue.Title"></InputText>
	</div>
	<div class="form-group">
		<label>Description</label>
		<InputTextArea class="form-control" @bind-Value="newIssue.Description"></InputTextArea>
	</div>
	<div class="form-group">
		<label>Category</label>
		<InputText class="form-control" @bind-Value="newIssue.Category"></InputText>
	</div>
	<div class="form-group">
		<label>Date</label>
		<InputDate class="form-control" @bind-Value="newIssue.Created"></InputDate>
	</div>
	<div class="form-group centered-content">
		<button class="btn btn-primary mt-3 mb-3" type="submit">Submit</button>	
	</div>
</EditForm>
</div>




@code {

	private Issue newIssue = new Issue();

	private async Task SubmitNewIssue()
	{
		await IssueRepository.AddAsync(newIssue);
		newIssue = new Issue(); 
	}

}

