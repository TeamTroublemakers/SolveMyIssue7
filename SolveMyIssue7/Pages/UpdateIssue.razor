@page "/updateIssue/{IssueId}"

@using MongoDB.Bson
@using SolveMyIssue7.Common.Interfaces
@using SolveMyIssue7.DataAccess.Models
@using SolveMyIssue7.DataAccess.Services
@using SolveMyIssue7.DataAccess.Services.Interfaces
@inject IIssueRepository IssueRepository
@inject ISolutionRepository SolutionRepository
@inject NavigationManager NavManager

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">SMI</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item active">
                    <a class="nav-link" href="">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="issue">Issue</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="Solution">Solution</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="ViewIssues">View Issues</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

<div class="centered-container">
    <h2 class="mt-3 display-4 glassmorphism">Update Issue</h2>
</div>

@if (issue != null)
{
    <div class="container mt-3 glassmorphism">
        <h2>Update Issue</h2>
        <EditForm Model="@issue" OnSubmit="EditIssue">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="title">Title:</label>
                <InputText id="title" class="form-control" @bind-Value="issue.Title" />
            </div>

            <div class="form-group">
                <label for="description">Description:</label>
                <InputTextArea id="description" class="form-control" @bind-Value="issue.Description" />
            </div>

            <div class="form-group">
                <label for="category">Category:</label>
                <InputText id="category" class="form-control" @bind-Value="issue.Category" />
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary mt-3">Update Issue</button>
                <button class="btn btn-danger mt-3" @onclick="DeleteIssue">Delete Issue</button>
          
              
            </div>
        </EditForm>
    </div>
}

else
{
    <p>Loading...</p>
}


@code {

    [Parameter]
    public string IssueId { get; set; }

    private Issue issue;

    protected override async Task OnInitializedAsync()
    {
        issue = await IssueRepository.GetByIdAsync(IssueId);
    }

    private async Task EditIssue()
    {

        await IssueRepository.UpdateAsync(issue);
        NavManager.NavigateTo("/ViewIssues");
    }

    private async Task DeleteIssue()
    {
        await IssueRepository.DeleteAsync(issue.Id.ToString());
        NavManager.NavigateTo("/ViewIssues");
    }

   
}
